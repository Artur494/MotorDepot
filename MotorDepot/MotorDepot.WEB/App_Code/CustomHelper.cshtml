@using MotorDepot.WEB.Models
@using MotorDepot.WEB.Models.Enums

@helper RenderAll()
{
    for (var i = 0; i < Session.Keys.Count; i++)
    {
        var sessionKey = Session.Keys.Get(i);
        var alert = (AlertViewModel)Session[sessionKey];
        if (alert == null) { return; }

        switch (alert.Type)
        {
            case AlertType.Success:
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @alert.Text
                    <p class="session-key d-none">@sessionKey</p>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                break;
            case AlertType.Error:
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @alert.Text
                    <p class="session-key d-none">@sessionKey</p>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                break;
            case AlertType.Warning:
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    @alert.Text
                    <p class="session-key d-none">@sessionKey</p>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                break;
            default:
                throw new ArgumentOutOfRangeException();
        }
    }
}

@helper DropDownMenuOfEnum(Type statusEnum, string urlAttribute, string action, string controller, string menuTitle)
{
    var statuses = statusEnum.GetEnumNames();
    if(!statuses.Any()) {throw new ArgumentException("Statuses count is 0");}
    var i = 0;
    <div class="dropdown show">
        <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            @menuTitle
        </a>

        <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
            @foreach (var status in statuses)
            {
                <a class="dropdown-item" href="/@controller/@action?@urlAttribute=@(i++)">@status</a>
            }
            <a class="dropdown-item" href="/@controller/@action">All</a>
        </div>
    </div>
}